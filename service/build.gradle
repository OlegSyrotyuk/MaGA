plugins {
    id 'java'
}

group = 'gg.cristalix'
version = '1.0.0'

dependencies {
    implementation 'ch.qos.logback:logback-classic:1.3.11'
    implementation 'ru.cristalix.core:microservice:1.0.61'
    implementation 'ru.cristalix:waterfall-chat:1.2'
    implementation 'ru.cristalix:waterfall-lib:1.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'it.unimi.dsi:fastutil:8.5.12'
    implementation 'commons-codec:commons-codec:1.16.0'
    implementation 'io.netty:netty-all:4.1.97.Final'
    implementation project(path: ':commons')
}

jar {
    from configurations.runtimeClasspath.collect(project.&zipTree)
    duplicatesStrategy DuplicatesStrategy.EXCLUDE

    manifest {
        attributes("Main-Class": "gg.cristalix.maga.service.MagaServer")
        attributes("Specification-Version": project.version)
    }

    archiveFileName = 'maga-service.jar'
}


tasks.register('uploadService') {
    doLast {
        ssh.run {
            session(remotes.webServer) {
                remove '/home/olegsyrotyuk/servers/maga-service/maga-service.jar'
                put from: jar.archiveFile.get().asFile.path, into: '/home/olegsyrotyuk/servers/maga-service/'
            }
        }
    }
    dependsOn jar
}